# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ develop ]

  pull_request:
    branches: [ develop ]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:

  # Code coverage (i.e. jacoco) needs the same classes for its test otherwise its classids can possibly not match
  Compilation:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache compilation
        id: cache-compilation
        uses: actions/cache@v3
        with:
          path: | 
                **/target/
          key: cache-compilation-${{ github.sha }}

      - name: Build with JDK8
        run: mvn compile -B -Dfmt.skip -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

  JDK8:
    needs: Compilation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: get cached compilation
        id: cache-compilation
        uses: actions/cache@v3
        with:
          path: | 
                **/target/
          key: cache-compilation-${{ github.sha }}

      - name: cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Test (JDK8)
        run: mvn -pl '!de.upb.swt.soot.tests' -am verify -B -Dfmt.skip -Dmaven.main.skip=true -PJava8 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -X

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: coverage-exec
          path: |
                  */target/coverage-reports/jacoco-ut-jdk8.exec
                  !de.upb.swt.soot.tests/

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-reports-jdk8
          path: |
                  */target/surefire-reports
                  !de.upb.swt.soot.tests/


  JDK9:
    needs: Compilation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: get cached compilation
        id: cache-compilation
        uses: actions/cache@v3
        with:
          path: | 
                **/target/
          key: cache-compilation-${{ github.sha }}

      - name: debug info
        run: tree **/target

      - name: cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 1.9
        uses: actions/setup-java@v1
        with:
          java-version: 1.9

      - name: Test (JDK9)
        run: mvn -pl '!de.upb.swt.soot.tests' -am verify -B -Dfmt.skip -Dmaven.main.skip=true -PJava9 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -X

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: coverage-exec
          path: |
            */target/coverage-reports/jacoco-ut-jdk9.exec
            !de.upb.swt.soot.tests/

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-reports-jdk9
          path: |
            */target/surefire-reports
            !de.upb.swt.soot.tests/

      # style check is not clean here but does not consume additional time as the other parallel running tests take (way) longer
      - name: Check Format
        run: mvn com.coveo:fmt-maven-plugin:check -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
    
    
    

    # takes a long time to run - so just run them when PR is not draft anymore
  IntegrationTest:
    if: ${{ !github.event.pull_request.draft }}
    needs: Compilation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: get cached compilation
        id: cache-compilation
        uses: actions/cache@v3
        with:
            path: | 
                  **/target/
            key: cache-compilation-${{ github.sha }}

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-    

      - name: Test (IntegrationTest)
        run: mvn -pl de.upb.swt.soot.tests -am verify -B -Dfmt.skip -Dmaven.main.skip=true -PIntegrationTest -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: coverage-exec
          path: |
            */target/coverage-reports/jacoco-ut-integrationtest.exec

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-reports-integrationtest
          path: |
            */target/surefire-reports



  CoverageReport:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    needs: [ JDK9, JDK8, IntegrationTest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: cache maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: get cached compilation
        id: cache-compilation
        uses: actions/cache@v3
        with:
          path: |
            **/target/
          key: cache-compilation-${{ github.sha }}

      - name: Download uploaded exec artifacts
        uses: actions/download-artifact@v3
        with:
          name: coverage-exec

      - name: merge coverage reports
        run:  mvn -ntp jacoco:merge@merge-results

      - name: aggregate coverage reports across java versions
        run: mvn -ntp jacoco:report-aggregate@generate-coverage-report

      - name: upload aggregated coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: aggregated-coverage-report
          path: ${{ github.workspace }}/report/target/jacoco-aggregate/

      - name: jacoco-badge-generator
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2.6.1
        with:
          jacoco-csv-file: report/target/jacoco-aggregate/jacoco.csv

      - name: Comment Coverage info
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage-pr-message
          recreate: true
          message: |
            ***Test Coverage***
            Total coverage ${{ steps.jacoco.outputs.coverage }}
            Amount of covered (bytecode-)branches ${{ steps.jacoco.outputs.branches }}

      - name: Commit the badge (if it changed)
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'commit badge'
          add: '**/badges/jacoco.svg'
